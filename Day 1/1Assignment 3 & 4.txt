What is a key in React ?
A "key" in React is a special string attribute that must be included when creating lists of elements. Keys are essential in React to identify which items in a list have been changed, updated, or deleted. They provide a unique identity to elements within lists. It is recommended to use a string as a key that uniquely identifies each item in the list. When keys are not explicitly assigned to list items, React defaults to using indexes as keys. Keys are crucial for React to pinpoint changes within lists efficiently and should be given to elements inside the array to provide them with a stable identity.

How Keys are involved in array Processing?
In array processing, keys play a crucial role in identifying elements within arrays. In JavaScript, the keys() method of Array instances returns an iterator object containing the keys for each index in the array. This method is used to iterate over the keys of an array, including empty slots represented by undefined values in sparse arrays. The keys() method is generic and expects the object to have a length property and integer-keyed properties. Unlike Object.keys(), which only includes existing keys, keys() does not ignore missing properties.
Additionally, in React, the "key" attribute is essential for identifying elements within lists during re-renders. When this attribute is present, React uses it to distinguish elements of the same type among siblings. It is crucial for flat lists and aids in optimizing performance during re-renders. While using unique values as keys is recommended, using array indexes as keys in static lists where item numbers and order remain constant is acceptable. Understanding how React utilizes keys can help optimize performance and improve the efficiency of rendering lists.

How to display images in react?
To display images in React, you can follow several approaches depending on whether the images are stored locally or fetched from an API. If you have images stored within your application, you can import them into your React component and map over the imported image paths to create <img> elements for each image. Alternatively, if you need to fetch images from an API, you can use libraries such as fetch or axios to make an API call and store the fetched image data in the component's state. Once the images are loaded, you can map over the retrieved image data to create <img> elements for each image.
